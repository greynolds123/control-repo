# GITLAB
# Maintainer: @randx

# CHUNKED TRANSFER
# It is a known issue that Git-over-HTTP requires chunked transfer encoding [0] which is not
# supported by Nginx < 1.3.9 [1]. As a result, pushing a large object with Git (i.e. a single large file)
# can lead to a 411 error. In theory you can get around this by tweaking this configuration file and either
# - installing an old version of Nginx with the chunkin module [2] compiled in, or
# - using a newer version of Nginx.
#
# At the time of writing we do not know if either of these theoretical solutions works. As a workaround
# users can use Git over SSH to push large files.
#
# [0] https://git.kernel.org/cgit/git/git.git/tree/Documentation/technical/http-protocol.txt#n99
# [1] https://github.com/agentzh/chunkin-nginx-module#status
# [2] https://github.com/agentzh/chunkin-nginx-module

upstream <%= @proxy_name %> {
  server unix:<%= @socket_path %>;
}

<% if @gitlab_ssl %>
server {
  listen <%= @gitlab_http_port %>;
  listen [::]:<%= @gitlab_http_port %> ipv6only=on;
  server_name <%= @gitlab_domain_alias ? @gitlab_domain+' '+@gitlab_domain_alias : @gitlab_domain %>;
  server_tokens off;
  root /nowhere;
  rewrite ^ https://$server_name$request_uri permanent;
}
<% end %>

server {
  # e.g., listen 192.168.1.1:80;
  listen <%= @gitlab_ssl ? @gitlab_ssl_port : @gitlab_http_port %>;
  listen [::]:<%= @gitlab_ssl ? @gitlab_ssl_port : @gitlab_http_port %> ipv6only=on;
  # e.g., server_name source.example.com;
  server_name <%= @gitlab_domain_alias ? @gitlab_domain+' '+@gitlab_domain_alias : @gitlab_domain %>;
  server_tokens off;
  root <%= @root_path %>;

  # Increase this if you want to upload large attachments
  # Or if you want to accept large git objects over http
  client_max_body_size 20m;

<% if @gitlab_ssl %>
  gzip                          off;
  ssl                           on;
  ssl_certificate               <%= @gitlab_ssl_cert %>;
  ssl_certificate_key           <%= @gitlab_ssl_key %>;
  # please see https://github.com/sbadia/puppet-gitlab/pull/104
  # ssl_protocols                 TLSv1.2 TLSv1.1 TLSv1;
  # ssl_ciphers                   AES:HIGH:!aNULL:!RC4:!MD5:!ADH:!MDF;
  ssl_prefer_server_ciphers     on;
  ssl_protocols                 <%= @gitlab_ssl_protocols %>;
  ssl_ciphers                   <%= @gitlab_ssl_ciphers %>;
<% end %>

  # individual nginx logs for this gitlab vhost
  access_log  /var/log/nginx/<%= @proxy_name %>_access.log;
  error_log   /var/log/nginx/<%= @proxy_name %>_error.log;

  location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @<%= @proxy_name %>;
  }

  # Enable gzip compression as per rails guide: http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression
  location ~ ^/(assets)/  {
    root <%= @root_path %>;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (gitlab unicorn)
  location @<%= @proxy_name %> {
    # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_read_timeout <%= @gitlab_http_timeout %>;
    # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_connect_timeout <%= @gitlab_http_timeout %>;
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
<% if @gitlab_ssl %>
    proxy_set_header   X-Forwarded-Ssl   on;
<% end %>
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

    proxy_pass http://<%= @proxy_name %>;
  }

  error_page 502 /502.html;
}

